name: Publish

on:
  push:
    tags:
      - v*
  workflow_dispatch:
 
env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: >
      Build ${{ matrix.python-version }} on ${{ matrix.platform || matrix.os }}
      (${{ matrix.alt_arch_name || matrix.arch }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['cp310']
        arch: [main, alt]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            ls: dir
          - os: macos-latest
            arch: alt
            alt_arch_name: 'arm64 universal2'
        exclude:
          - os: windows-latest
            arch: alt
          - os: ubuntu-latest
            arch: alt

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        components: clippy
        override: true

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.alt_arch_name }}

    - run: rustup target add aarch64-apple-darwin
      if: matrix.os == 'macos-latest'

    - run: rustup toolchain install stable-i686-pc-windows-msvc
      if: matrix.os == 'windows-latest'

    - run: rustup target add i686-pc-windows-msvc
      if: matrix.os == 'windows-latest'

    - name: Get pip cache dir
      id: pip-cache
      if: matrix.os != 'windows-latest'
      run: |
        echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
    
    - name: Get pip cache dir
      id: pip-cache-win
      if: matrix.os == 'windows-latest'
      run: |
        "dir=$(pip cache dir)" >> $env:GITHUB_OUTPUT
    
    - name: Cache python dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.pip-cache.outputs.dir || steps.pip-cache-win.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}

    - name: Install python dependencies
      run: pip install -U build setuptools wheel twine cibuildwheel platformdirs

    - name: Display cibuildwheel cache dir
      id: cibuildwheel-cache
      run: |
        from platformdirs import user_cache_path
        import os

        with open(os.getenv('GITHUB_OUTPUT'), 'w') as f:
          f.write(f"dir={str(user_cache_path(appname='cibuildwheel', appauthor='pypa'))}")
      shell: python

    - name: Cache cibuildwheel tools
      uses: actions/cache@v3
      with:
        path: ${{ steps.cibuildwheel-cache.outputs.dir }}
        key: ${{ runner.os }}-cibuildwheel-${{ matrix.python-version }}

    - name: Build sdist
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == 'cp310'
      run: |
        python -m build --sdist -o wheelhouse

    - name: Build ${{ matrix.platform || matrix.os }} binaries
      run: cibuildwheel --output-dir wheelhouse
      env:
        CIBW_BUILD: '${{ matrix.python-version }}-*'
        # rust doesn't seem to be available for musl linux on i686
        CIBW_SKIP: '*-musllinux_i686'
        # we build for "alt_arch_name" if it exists, else 'auto'
        CIBW_ARCHS: ${{ matrix.alt_arch_name || 'auto' }}
        CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH" CARGO_TERM_COLOR="always"'
        CIBW_ENVIRONMENT_WINDOWS: 'PATH="$UserProfile\.cargo\bin;$PATH"'
        CIBW_BEFORE_BUILD: rustup show
        CIBW_BEFORE_BUILD_LINUX: >
          curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain=stable --profile=minimal -y &&
          rustup show
        CIBW_TEST_COMMAND: 'pytest {project}/finance_enums/tests'
        CIBW_TEST_REQUIRES: pytest pytest-cov
        CIBW_TEST_SKIP: '*-macosx_arm64 *-macosx_universal2:arm64'
        CIBW_BUILD_VERBOSITY: 1

    - run: ${{ matrix.ls || 'ls -lh' }} wheelhouse/

    - run: twine check wheelhouse/*

    - uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: wheelhouse

