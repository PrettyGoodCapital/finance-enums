name: Build Python wheels with cibuildwheel
description: 'Run cibuildwheel and generate python wheels'

inputs:
  version:
    type: choice
    description: 'Python Version to use'
    options: 
      - '3.7'
      - '3.8'
      - '3.9'
      - '3.10'
      - '3.11'
      - '3.12'
  kind:
    type: choice
    description: 'Kind of asset to install, "cp" or "pp"'
    options: 
        - cp
        - pp
    default: 'cp'
  install_path:
    type: string
    description: 'Path to install into'
    default: '.'

runs:
  using: 'composite'
  steps:
    - name: Install cibuildwheel
      run: pip install -U cibuildwheel
      shell: bash

    - name: Build wheels (Linux 3.7)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}37-*x86_64"  # only build x86_64, skip i686
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'Linux' && inputs.version == '3.7'}}

    - name: Build wheels (Linux 3.8)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}38-*x86_64"  # only build x86_64, skip i686
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'Linux' && inputs.version == '3.8'}}

    - name: Build wheels (Linux 3.9)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}39-*x86_64"  # only build x86_64, skip i686
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'Linux' && inputs.version == '3.9'}}

    - name: Build wheels (Linux 3.10)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}310-*x86_64"  # only build x86_64, skip i686
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'Linux' && inputs.version == '3.10'}}

    - name: Build wheels (Linux 3.11)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}311-*x86_64"  # only build x86_64, skip i686
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'Linux' && inputs.version == '3.11'}}

    - name: Build wheels (Linux 3.12)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}312-*x86_64"  # only build x86_64, skip i686
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'Linux' && inputs.version == '3.12'}}

    - name: Build wheels (Mac 3.7)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}37-*"  # build x86_64, arm64, and universal2
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'macOS' && inputs.version == '3.7'}}

    - name: Build wheels (Mac 3.8)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}38-*"  # build x86_64, arm64, and universal2
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'macOS' && inputs.version == '3.8'}}

    - name: Build wheels (Mac 3.9)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}39-*"  # build x86_64, arm64, and universal2
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'macOS' && inputs.version == '3.9'}}

    - name: Build wheels (Mac 3.10)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}310-*"  # build x86_64, arm64, and universal2
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'macOS' && inputs.version == '3.10'}}

    - name: Build wheels (Mac 3.11)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}311-*"  # build x86_64, arm64, and universal2
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'macOS' && inputs.version == '3.11'}}

    - name: Build wheels (Mac 3.12)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}312-*"  # build x86_64, arm64, and universal2
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'macOS' && inputs.version == '3.12'}}

    - name: Build wheels (Windows 3.7)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}37-*amd64"  # build amd64, skip win32 and arm64
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'Windows' && inputs.version == '3.7'}}

    - name: Build wheels (Windows 3.8)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}38-*amd64"  # build amd64, skip win32 and arm64
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'Windows' && inputs.version == '3.8'}}

    - name: Build wheels (Windows 3.9)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}39-*amd64"  # build amd64, skip win32 and arm64
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'Windows' && inputs.version == '3.9'}}

    - name: Build wheels (Windows 3.10)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}310-*amd64"  # build amd64, skip win32 and arm64
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'Windows' && inputs.version == '3.10'}}

    - name: Build wheels (Windows 3.11)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}311-*amd64"  # build amd64, skip win32 and arm64
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'Windows' && inputs.version == '3.11'}}

    - name: Build wheels (Windows 3.12)
      run: make dist-cibw
      shell: bash
      env:
        CIBW_BUILD: "${{ inputs.kind }}312-*amd64"  # build amd64, skip win32 and arm64
        CIBW_TEST_COMMAND: "echo 'Skipping tests, run on separate actions'"
      if: ${{ runner.os == 'Windows' && inputs.version == '3.12'}}
